% docker, containers

# Start docker compose
docker-compose up <use_daemon>

# Build docker image
docker buildx build .

# Use shell from a container
docker exec -it <container> /bin/bash

# Prevent container from starting automatically
docker update --restart=no <container>

# List local images
docker images

# Restart a container
docker restart <multiple_containers>

# Remove a container
docker rm <all_containers>

# View image layers
docker image inspect <image_id> | jq

# Inspect image layers with skopeo
skopeo inspect --raw docker://<image_and_tag> | jq

# Remove unused images
docker image prune

# Stop docker container
docker stop <multiple_containers>

# Remove image
docker rmi <image_id>

# Pull docker image
docker pull <image_to_pull>

# List volumes
docker volumes ls

# Inspect volume
docker volume inspect <volume>

# Remove volumes
docker volume rm <multiple_volumes>

$ container: docker ps --format "table {{.ID}}\t{{.Names}}\t{{.Status}}" --- --headers 1 --column 1
$ multiple_containers: docker ps --format "table {{.ID}}\t{{.Names}}\t{{.Status}}" --- --headers 1 --column 1 --multi --expand
$ all_containers: docker container ls -a --format "table {{.ID}}\t{{.Names}}\t{{.Status}}" --- --headers 1 --column 1 --multi --expand
$ image_id: docker images --- --headers 1 --column 3
$ image_name: docker images --- --headers 1 --column 1 --column 2
$ image_and_tag: docker image list --format "table {{.ID}}\t{{.Repository}}:{{.Tag}}\t{{.Size}}" --- --headers 1 --column 2
$ use_daemon: echo "daemon foreground" | tr ' ' '\n' --- --map "grep -q 'daemon' && echo '-d'"
$ volume: docker volume ls --- --headers 1 --column 2
$ multiple_volumes: docker volume ls --- --headers 1 --multi --expand --column 2

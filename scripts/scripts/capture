#!/bin/sh
FECHA="$(date +%Y-%m-%d)"
INDEX="$HOME/notas/index.md"
NOMBRE_ARCHIVO="$HOME/notas/cap-$FECHA.md"
NOTA_DIARIA="$HOME/notas/diary/$FECHA.md"
HUB_CAPTURAS="$HOME/notas/hub capturas.md"
LINK_A_DIARY="- [[cap-$FECHA|Captura del día]]" 

function fileContentMatchesRegex() {
	TO_FIND=$1
	FILE=$2
	FILE_HAS_STRING=0

	RESULTS=(grep -E "$TO_FIND" "$FILE")
	if [ $("${RESULTS[@]}" | wc -l) -gt 0 ]; then
		FILE_HAS_STRING=1
	fi
}

# Si el archivo no existe, lo creamos
if [ ! -f $NOMBRE_ARCHIVO ]; then
	TITULO="$(date +'%A %d de %B de %Y')"
	echo "# Notas de $TITULO" > $NOMBRE_ARCHIVO
	echo "- [[cap-$FECHA|$FECHA]]" >> $HUB_CAPTURAS
	echo "- [ ] [[cap-$FECHA|$FECHA]]" >> "$INDEX"
else

	fileContentMatchesRegex "(- \[[ |X]\] \[\[.*$FECHA\]\])" "$INDEX"

	if [ $FILE_HAS_STRING -eq 1 ]; then
		# Si el link existe, se actualiza
		sed -i "s+- \[X\] \[\[.*$FECHA\]\]+- [ ] [[cap-$FECHA|$FECHA]]+g" $INDEX
	else
		# De lo contrario, se agrega
		echo "- [ ] [[cap-$FECHA|$FECHA]]" >> "$INDEX"
	fi
fi

if [ -f $ARCHIVO_DIARIO ]; then
	fileContentMatchesRegex "(- \[\[cap-$FECHA\|Captura del día\]\])" "$NOTA_DIARIA"
	if [ $FILE_HAS_STRING -eq 0 ]; then
		echo "# Captura del día" >> $NOTA_DIARIA
		echo $LINK_A_DIARY >> $NOTA_DIARIA
	fi
fi

nvim -c "norm Go" \
	-c "norm Go## $(date +%H:%M)" \
	-c "norm G2o" \
	-c "norm zz" \
	-c "startinsert" $NOMBRE_ARCHIVO \
	-c "chdir $HOME/notas"

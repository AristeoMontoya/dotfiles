#!/usr/bin/env bash

# Get existing sessions with an asterisk at the start
existing_sessions=$(tmux list-sessions | awk -F ':' '{print "*"$1}')
session_dir="$HOME/.config/tmux/session-scripts/"

# Determine the correct realpath command based on OS
realpath_cmd=$(command -v grealpath || command -v realpath)

# Find scripts excluding .gitkeep
scripts=$(find "$session_dir" -type f ! -iname ".gitkeep" -exec "$realpath_cmd" --relative-to="$session_dir" {} \;)

# Filter out existing sessions
while IFS= read -r line; do
    session_option="${line##*/}"
    if echo "$existing_sessions" | grep -q "$session_option"; then
        scripts=$(echo "$scripts" | sed "\#${line}#d")
    fi
done <<< "$scripts"

# Prepare session options with existing sessions first, scripts in the middle, and the kill option last
session_options=$(printf "%s\n%s\n\033[31mKill Session\033[0m" "$existing_sessions" "$scripts")

# Color existing sessions blue
session_options=$(echo -e "$session_options" | awk '/^\*/ {printf "\033[1;34m%s\033[0m\n", $0; next} {print}')

# Prompt for session selection
session=$(printf "%s" "$session_options" | fzf --ansi --header="Pick a session or 'Kill Session'")

# Handle session switching or attachment
if [[ "$session" == "Kill Session" ]]; then
    # Prompt for sessions to kill
    sessions_to_kill=$(printf "%s" "$existing_sessions" | fzf --multi --header="Select sessions to kill")
    
    if [ -n "$sessions_to_kill" ]; then
        # Prepare a confirmation message
        session_names=$(echo "$sessions_to_kill" | awk '{print $1}' | sed 's/^\*//') # Remove asterisks for display
        session_names_list=$(echo "$session_names" | tr '\n' ', ' | sed 's/, $//; s/,/, /g' | sed 's/, $//')

        printf "Kill session(s): \033[33m%s\033[0m? (y/n): " "$session_names_list"
        
        read -r confirm
        if [[ "$confirm" == [yY] ]]; then
            # Kill selected sessions
            while IFS= read -r line; do
                session_name="${line//\* /}"  # Remove the asterisk and space
                tmux kill-session -t "$session_name"
                echo "Session '$session_name' killed."
            done <<< "$sessions_to_kill"
        fi
    fi
elif [ -n "$session" ]; then
    # Keep the full path for running the script
    script_path="$session_dir/$session" # Construct the full script path

    # Extract the session name for tmux
    session_name="${session##*/}"  # Get the session name without the asterisk or path
    session_name="${session_name//env\//}" # Remove "env/" prefix for display

    if ! tmux has-session -t "$session_name" 2>/dev/null; then
        if [ -f "$script_path" ]; then
            # Run script and get reported session name
            session_name=$($script_path)
        else
            echo "Can't find session script: '$script_path'."
        fi
    fi
    
    if [ -n "$TMUX" ]; then
        tmux switch -t "$session_name"
    else
        tmux attach -t "$session_name"
    fi
fi

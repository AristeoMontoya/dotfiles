#!/usr/bin/env bash

# Get existing sessions with an asterisk at the start
existing_sessions=$(tmux list-sessions | awk -F ':' '{print "*"$1}')
session_dir="$HOME/.config/tmux/session-scripts/"

# Determine the correct realpath command based on OS
realpath_cmd=$(command -v grealpath || command -v realpath)

# Find scripts excluding .gitkeep
scripts=$(find "$session_dir" -type f ! -iname ".gitkeep" -exec "$realpath_cmd" --relative-to="$session_dir" {} \;)

# Filter out existing sessions
while IFS= read -r line; do
    session_option="${line##*/}"
    if echo "$existing_sessions" | grep -q "$session_option"; then
        scripts=$(echo "$scripts" | sed "\#${line}#d")
    fi
done <<< "$scripts"

# Prepare session options with existing sessions first, scripts in the middle, and the kill option last
session_options=$(printf "%s\n%s\n\033[31mKill Current Session\033[0m" "$existing_sessions" "$scripts")

# Color existing sessions blue
session_options=$(echo -e "$session_options" | awk '/^\*/ {printf "\033[1;34m%s\033[0m\n", $0; next} {print}')

# Prompt for session selection
session=$(printf "%s" "$session_options" | fzf --ansi --header="Pick a session or 'Kill Current Session'" | awk '{print $1}') # Get the first field

# Debugging: Print the selected session name
echo "Selected option: '$session'"

# Handle session switching or attachment
if [[ "$session" == "Kill" ]]; then
    # Kill the current session
    current_session=$(tmux display-message -p '#S')
    # Prompt for confirmation
    printf "Kill session \033[33m$current_session\033[0m? (y/n): "
    read -r confirm
    if [[ "$confirm" == [yY] ]]; then
        if tmux has-session -t "$current_session" 2>/dev/null; then
            tmux kill-session -t "$current_session"
            echo "Session '$current_session' killed."
        else
            echo "No such session: '$current_session'."
        fi
    fi
elif [ -n "$session" ]; then
    # Keep the full path for running the script
    script_path="$session_dir/$session" # Construct the full script path

    # Extract the session name for tmux
    session_name="${session##*/}"  # Get the session name without the asterisk or path
    session_name="${session_name//env\//}" # Remove "env/" prefix for display

    if ! tmux has-session -t "$session_name" 2>/dev/null; then
        if [ -f "$script_path" ]; then
            "$script_path" # Run the script if it exists
        else
            echo "Can't find session script: '$script_path'."
        fi
    fi
    
    if [ -n "$TMUX" ]; then
        tmux switch -t "$session_name"
    else
        tmux attach -t "$session_name"
    fi
fi
